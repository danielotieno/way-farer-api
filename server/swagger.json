{
    "swagger": "2.0",
    "info": {
        "description": "WayFarer is a public bus transportation booking service.An API that will provide a fucntionality for WayFarer Admins to be able to create and manage trips.\n[GitHub Repo](https://github.com/danielotieno/way-farer-api)\n",
        "version": "1.0.0",
        "title": "WayFarer API"
    },
    "host": "virtserver.swaggerhub.com",
    "basePath": "/danielotienoke/WayFarerAPI/1.0.0",
    "tags": [
        {
            "name": "Trip",
            "description": "Everything about your Trips"
        },
        {
            "name": "Booking",
            "description": "Everything about your Booking a trip"
        },
        {
            "name": "User",
            "description": "Everything about your User Authentication"
        }
    ],
    "schemes": [
        "https",
        "http"
    ],
    "paths": {
        "/api/v1/trips": {
            "post": {
                "tags": [
                    "Trip"
                ],
                "summary": "Add a new trip.",
                "operationId": "addTrip",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Create a new trip object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Trip"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/api/v1/trips/{tripId}/cancel": {
            "patch": {
                "tags": [
                    "Trip"
                ],
                "summary": "Update an existing trip",
                "operationId": "patchTrip",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "tripId",
                        "in": "path",
                        "description": "ID of trip to return",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Trip"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Trip not found"
                    }
                }
            }
        },
        "/api/v1/trips/{tripId}": {
            "get": {
                "tags": [
                    "Trip"
                ],
                "summary": "Get a specific trip by ID",
                "description": "Returns a single trip",
                "operationId": "getTripById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "tripId",
                        "in": "path",
                        "description": "ID of trip to return",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Trip"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Trip not found"
                    }
                }
            }
        },
        "/api/v1/trips/": {
            "get": {
                "tags": [
                    "Trip"
                ],
                "summary": "Returns all trips",
                "operationId": "getAllTrips",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/v1/bookings": {
            "post": {
                "tags": [
                    "Booking"
                ],
                "summary": "Add a booking.",
                "operationId": "addBooking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Create a new booking object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Booking"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/api/v1/bookings/": {
            "get": {
                "tags": [
                    "Booking"
                ],
                "summary": "Returns all bookings",
                "operationId": "getAllBookings",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/v1/bookings/{bookingId}": {
            "delete": {
                "tags": [
                    "Booking"
                ],
                "summary": "Delete a specific booking by ID",
                "operationId": "deleteBookingById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "bookingId",
                        "in": "path",
                        "description": "ID of the booking to be deleted",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Booking"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Booking not found"
                    }
                }
            }
        },
        "/api/v1/auth/signup/admin": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create Admin",
                "description": "This can only be done by the admin.",
                "operationId": "createAdmin",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Created Admin object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/api/v1/auth/signup": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create a user",
                "description": "This can only be done by the logged in user.",
                "operationId": "createUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Created user object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Logs user into the system",
                "operationId": "loginUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "The user email for login",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "The password for login in clear text",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "headers": {
                            "X-Rate-Limit": {
                                "type": "integer",
                                "format": "int32",
                                "description": "calls per hour allowed by the user"
                            },
                            "X-Expires-After": {
                                "type": "string",
                                "format": "date-time",
                                "description": "date in UTC when token expires"
                            }
                        },
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid username/password supplied"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "petstore_auth": {
            "type": "oauth2",
            "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
            "flow": "implicit"
        },
        "api_key": {
            "type": "apiKey",
            "name": "api_key",
            "in": "header"
        }
    },
    "definitions": {
        "User": {
            "type": "object",
            "required": [
                "dateCreated",
                "email",
                "firstName",
                "lastName",
                "password"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "firstName": {
                    "type": "string",
                    "example": "Daniel"
                },
                "lastName": {
                    "type": "string",
                    "example": "Otieno"
                },
                "email": {
                    "type": "string",
                    "format": "email",
                    "example": "daniel@gmail.com"
                },
                "password": {
                    "type": "string",
                    "example": "123456789"
                },
                "dateCreated": {
                    "type": "string",
                    "format": "date"
                }
            },
            "xml": {
                "name": "User"
            }
        },
        "Trip": {
            "type": "object",
            "required": [
                "busNumber",
                "destination",
                "fare",
                "origin",
                "seatingCapacity",
                "tripDate"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "seatingCapacity": {
                    "type": "integer",
                    "example": 24
                },
                "busNumber": {
                    "type": "string",
                    "example": "RAD 276 K"
                },
                "origin": {
                    "type": "string",
                    "example": "Mombasa"
                },
                "destination": {
                    "type": "string",
                    "example": "Kigali"
                },
                "fare": {
                    "type": "number",
                    "example": 4560.0
                },
                "status": {
                    "type": "string",
                    "description": "Status of the trip",
                    "enum": [
                        "available",
                        "cancelled"
                    ]
                },
                "tripDate": {
                    "type": "string",
                    "format": "date"
                }
            }
        },
        "Booking": {
            "type": "object",
            "required": [
                "numberOfSeats",
                "tripId"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "tripId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "a165520d-6672-4e9c-ba41-ee206908263e"
                },
                "numberOfSeats": {
                    "type": "number",
                    "example": 5.0
                },
                "dateCreated": {
                    "type": "string",
                    "format": "date"
                }
            },
            "xml": {
                "name": "User"
            }
        }
    }
}